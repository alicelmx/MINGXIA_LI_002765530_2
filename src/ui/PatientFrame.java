/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package ui;

import dao.DoctorDao;
import dao.HospitalDao;
import dao.PatientDao;
import java.util.ArrayList;
import java.util.List;
import javax.swing.table.DefaultTableModel;
import model.Doctor;
import model.Hospital;
import model.NearDoctorModel;
import model.Patient;

/**
 *
 * @author limingxia
 */
public class PatientFrame extends javax.swing.JFrame {

    private PatientDao patientDao = new PatientDao();
    private HospitalDao hospitalDao = new HospitalDao();
    private DoctorDao doctorDao = new DoctorDao();

    List<NearDoctorModel> nearDoctorList;

    public String username;
    public String userId;

    /**
     * Creates new form PatientFrame
     */
    public PatientFrame() {
        initComponents();
    }

    PatientFrame(String userId, String userName) {
        this.userId = userId;
        this.username = userName;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnBrowseDoctors = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbNearDoctors = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btnBrowseDoctors.setText("browse doctors");
        btnBrowseDoctors.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBrowseDoctorsActionPerformed(evt);
            }
        });

        tbNearDoctors.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Name", "Hospital", "Department", "Available Time"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tbNearDoctors);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(51, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBrowseDoctors))
                .addGap(53, 53, 53))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addComponent(btnBrowseDoctors)
                .addGap(28, 28, 28)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 311, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(99, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnBrowseDoctorsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBrowseDoctorsActionPerformed

        // Patients are able to look for a doctor under the near hospitals
        Patient patient = patientDao.findPatientInfoByUid(userId);
        String zipcode = patient.getZipcode();

        // search hospital
        List<Hospital> hospitalList = hospitalDao.findHospitalByZipcode(zipcode);

        nearDoctorList = new ArrayList<>();
        hospitalList.stream().forEach(o -> {
            o.getDoctorDirectory().stream().forEach(m -> {

                Doctor doctor = doctorDao.findDoctorByDid(m);

                NearDoctorModel nearDoctorModel = new NearDoctorModel();
                nearDoctorModel.setHospital(o.gethName());
                nearDoctorModel.setAvailableTime(doctor.getAvailableTime());
                nearDoctorModel.setName(doctor.getdName());
                nearDoctorModel.setDepartment(doctor.getDepartment());

                nearDoctorList.add(nearDoctorModel);
            });
        });

        populateTable();


    }//GEN-LAST:event_btnBrowseDoctorsActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PatientFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PatientFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PatientFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PatientFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PatientFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBrowseDoctors;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tbNearDoctors;
    // End of variables declaration//GEN-END:variables

    private void populateTable() {
        DefaultTableModel model = (DefaultTableModel) tbNearDoctors.getModel();
        model.setRowCount(0);

        for (NearDoctorModel doctor : nearDoctorList) {

            Object[] row = new Object[4];
            row[0] = doctor;// TODO æ”¹toString
            row[1] = doctor.getHospital();
            row[2] = doctor.getDepartment();
            row[3] = doctor.getAvailableTime();

            model.addRow(row);
        }
    }
}
